# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: messages.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import basicTypes_pb2 as basicTypes__pb2
import template_pb2 as template__pb2
import timers_pb2 as timers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0emessages.proto\x12\x07rv.data\x1a\x10\x62\x61sicTypes.proto\x1a\x0etemplate.proto\x1a\x0ctimers.proto\"\xc0\t\n\x07Message\x12\x1b\n\x04uuid\x18\x01 \x01(\x0b\x32\r.rv.data.UUID\x12\r\n\x05title\x18\x02 \x01(\t\x12\x16\n\x0etime_to_remove\x18\x03 \x01(\x01\x12\x1a\n\x12visible_on_network\x18\x04 \x01(\x08\x12\x32\n\x08template\x18\x06 \x01(\x0b\x32 .rv.data.Template.Identification\x12.\n\nclear_type\x18\t \x01(\x0e\x32\x1a.rv.data.Message.ClearType\x12\x14\n\x0cmessage_text\x18\n \x01(\t\x12&\n\x06tokens\x18\x0b \x03(\x0b\x32\x16.rv.data.Message.Token\x12\x31\n\x0ctoken_values\x18\x0c \x03(\x0b\x32\x1b.rv.data.Message.TokenValue\x1a\xcb\x02\n\x05Token\x12\x1b\n\x04uuid\x18\x01 \x01(\x0b\x32\r.rv.data.UUID\x12\x34\n\x04text\x18\x02 \x01(\x0b\x32$.rv.data.Message.Token.TokenTypeTextH\x00\x12\x36\n\x05timer\x18\x03 \x01(\x0b\x32%.rv.data.Message.Token.TokenTypeTimerH\x00\x12\x36\n\x05\x63lock\x18\x04 \x01(\x0b\x32%.rv.data.Message.Token.TokenTypeClockH\x00\x1a\x1d\n\rTokenTypeText\x12\x0c\n\x04name\x18\x01 \x01(\t\x1a\x41\n\x0eTokenTypeTimer\x12\x0c\n\x04name\x18\x01 \x01(\t\x12!\n\ntimer_uuid\x18\x02 \x01(\x0b\x32\r.rv.data.UUID\x1a\x10\n\x0eTokenTypeClockB\x0b\n\tTokenType\x1a\xd5\x03\n\nTokenValue\x12\x1f\n\x08token_id\x18\x01 \x01(\x0b\x32\r.rv.data.UUID\x12\x12\n\ntoken_name\x18\x05 \x01(\t\x12:\n\x04text\x18\x02 \x01(\x0b\x32*.rv.data.Message.TokenValue.TokenValueTextH\x00\x12<\n\x05timer\x18\x03 \x01(\x0b\x32+.rv.data.Message.TokenValue.TokenValueTimerH\x00\x12<\n\x05\x63lock\x18\x04 \x01(\x0b\x32+.rv.data.Message.TokenValue.TokenValueClockH\x00\x1a\x1f\n\x0eTokenValueText\x12\r\n\x05value\x18\x01 \x01(\t\x1am\n\x0fTokenValueTimer\x12\x33\n\rconfiguration\x18\x01 \x01(\x0b\x32\x1c.rv.data.Timer.Configuration\x12%\n\x06\x66ormat\x18\x02 \x01(\x0b\x32\x15.rv.data.Timer.Format\x1a\x38\n\x0fTokenValueClock\x12%\n\x06\x66ormat\x18\x01 \x01(\x0b\x32\x15.rv.data.Clock.FormatB\x10\n\x0eTokenValueType\"Z\n\tClearType\x12\x15\n\x11\x43LEAR_TYPE_MANUAL\x10\x00\x12\x19\n\x15\x43LEAR_TYPE_AFTER_TIME\x10\x01\x12\x1b\n\x17\x43LEAR_TYPE_AFTER_TIMERS\x10\x02\"i\n\x0fMessageDocument\x12\x32\n\x10\x61pplication_info\x18\x01 \x01(\x0b\x32\x18.rv.data.ApplicationInfo\x12\"\n\x08messages\x18\x02 \x03(\x0b\x32\x10.rv.data.Messageb\x06proto3')



_MESSAGE = DESCRIPTOR.message_types_by_name['Message']
_MESSAGE_TOKEN = _MESSAGE.nested_types_by_name['Token']
_MESSAGE_TOKEN_TOKENTYPETEXT = _MESSAGE_TOKEN.nested_types_by_name['TokenTypeText']
_MESSAGE_TOKEN_TOKENTYPETIMER = _MESSAGE_TOKEN.nested_types_by_name['TokenTypeTimer']
_MESSAGE_TOKEN_TOKENTYPECLOCK = _MESSAGE_TOKEN.nested_types_by_name['TokenTypeClock']
_MESSAGE_TOKENVALUE = _MESSAGE.nested_types_by_name['TokenValue']
_MESSAGE_TOKENVALUE_TOKENVALUETEXT = _MESSAGE_TOKENVALUE.nested_types_by_name['TokenValueText']
_MESSAGE_TOKENVALUE_TOKENVALUETIMER = _MESSAGE_TOKENVALUE.nested_types_by_name['TokenValueTimer']
_MESSAGE_TOKENVALUE_TOKENVALUECLOCK = _MESSAGE_TOKENVALUE.nested_types_by_name['TokenValueClock']
_MESSAGEDOCUMENT = DESCRIPTOR.message_types_by_name['MessageDocument']
_MESSAGE_CLEARTYPE = _MESSAGE.enum_types_by_name['ClearType']
Message = _reflection.GeneratedProtocolMessageType('Message', (_message.Message,), {

  'Token' : _reflection.GeneratedProtocolMessageType('Token', (_message.Message,), {

    'TokenTypeText' : _reflection.GeneratedProtocolMessageType('TokenTypeText', (_message.Message,), {
      'DESCRIPTOR' : _MESSAGE_TOKEN_TOKENTYPETEXT,
      '__module__' : 'messages_pb2'
      # @@protoc_insertion_point(class_scope:rv.data.Message.Token.TokenTypeText)
      })
    ,

    'TokenTypeTimer' : _reflection.GeneratedProtocolMessageType('TokenTypeTimer', (_message.Message,), {
      'DESCRIPTOR' : _MESSAGE_TOKEN_TOKENTYPETIMER,
      '__module__' : 'messages_pb2'
      # @@protoc_insertion_point(class_scope:rv.data.Message.Token.TokenTypeTimer)
      })
    ,

    'TokenTypeClock' : _reflection.GeneratedProtocolMessageType('TokenTypeClock', (_message.Message,), {
      'DESCRIPTOR' : _MESSAGE_TOKEN_TOKENTYPECLOCK,
      '__module__' : 'messages_pb2'
      # @@protoc_insertion_point(class_scope:rv.data.Message.Token.TokenTypeClock)
      })
    ,
    'DESCRIPTOR' : _MESSAGE_TOKEN,
    '__module__' : 'messages_pb2'
    # @@protoc_insertion_point(class_scope:rv.data.Message.Token)
    })
  ,

  'TokenValue' : _reflection.GeneratedProtocolMessageType('TokenValue', (_message.Message,), {

    'TokenValueText' : _reflection.GeneratedProtocolMessageType('TokenValueText', (_message.Message,), {
      'DESCRIPTOR' : _MESSAGE_TOKENVALUE_TOKENVALUETEXT,
      '__module__' : 'messages_pb2'
      # @@protoc_insertion_point(class_scope:rv.data.Message.TokenValue.TokenValueText)
      })
    ,

    'TokenValueTimer' : _reflection.GeneratedProtocolMessageType('TokenValueTimer', (_message.Message,), {
      'DESCRIPTOR' : _MESSAGE_TOKENVALUE_TOKENVALUETIMER,
      '__module__' : 'messages_pb2'
      # @@protoc_insertion_point(class_scope:rv.data.Message.TokenValue.TokenValueTimer)
      })
    ,

    'TokenValueClock' : _reflection.GeneratedProtocolMessageType('TokenValueClock', (_message.Message,), {
      'DESCRIPTOR' : _MESSAGE_TOKENVALUE_TOKENVALUECLOCK,
      '__module__' : 'messages_pb2'
      # @@protoc_insertion_point(class_scope:rv.data.Message.TokenValue.TokenValueClock)
      })
    ,
    'DESCRIPTOR' : _MESSAGE_TOKENVALUE,
    '__module__' : 'messages_pb2'
    # @@protoc_insertion_point(class_scope:rv.data.Message.TokenValue)
    })
  ,
  'DESCRIPTOR' : _MESSAGE,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:rv.data.Message)
  })
_sym_db.RegisterMessage(Message)
_sym_db.RegisterMessage(Message.Token)
_sym_db.RegisterMessage(Message.Token.TokenTypeText)
_sym_db.RegisterMessage(Message.Token.TokenTypeTimer)
_sym_db.RegisterMessage(Message.Token.TokenTypeClock)
_sym_db.RegisterMessage(Message.TokenValue)
_sym_db.RegisterMessage(Message.TokenValue.TokenValueText)
_sym_db.RegisterMessage(Message.TokenValue.TokenValueTimer)
_sym_db.RegisterMessage(Message.TokenValue.TokenValueClock)

MessageDocument = _reflection.GeneratedProtocolMessageType('MessageDocument', (_message.Message,), {
  'DESCRIPTOR' : _MESSAGEDOCUMENT,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:rv.data.MessageDocument)
  })
_sym_db.RegisterMessage(MessageDocument)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _MESSAGE._serialized_start=76
  _MESSAGE._serialized_end=1292
  _MESSAGE_TOKEN._serialized_start=397
  _MESSAGE_TOKEN._serialized_end=728
  _MESSAGE_TOKEN_TOKENTYPETEXT._serialized_start=601
  _MESSAGE_TOKEN_TOKENTYPETEXT._serialized_end=630
  _MESSAGE_TOKEN_TOKENTYPETIMER._serialized_start=632
  _MESSAGE_TOKEN_TOKENTYPETIMER._serialized_end=697
  _MESSAGE_TOKEN_TOKENTYPECLOCK._serialized_start=699
  _MESSAGE_TOKEN_TOKENTYPECLOCK._serialized_end=715
  _MESSAGE_TOKENVALUE._serialized_start=731
  _MESSAGE_TOKENVALUE._serialized_end=1200
  _MESSAGE_TOKENVALUE_TOKENVALUETEXT._serialized_start=982
  _MESSAGE_TOKENVALUE_TOKENVALUETEXT._serialized_end=1013
  _MESSAGE_TOKENVALUE_TOKENVALUETIMER._serialized_start=1015
  _MESSAGE_TOKENVALUE_TOKENVALUETIMER._serialized_end=1124
  _MESSAGE_TOKENVALUE_TOKENVALUECLOCK._serialized_start=1126
  _MESSAGE_TOKENVALUE_TOKENVALUECLOCK._serialized_end=1182
  _MESSAGE_CLEARTYPE._serialized_start=1202
  _MESSAGE_CLEARTYPE._serialized_end=1292
  _MESSAGEDOCUMENT._serialized_start=1294
  _MESSAGEDOCUMENT._serialized_end=1399
# @@protoc_insertion_point(module_scope)
